# float  object  demo  program (Home  work)
a = 10.8
print(a) #gives value of object i.e. 10.8
print(type(a)) #gives type of object i.e. float object
print(id(a)) #gives address of object a
b = 25.   #error due to no number after decimal point
print(b)  #no output due to error
print(type(b)) #gives type of object b
c = .689
print(c) #gives value of c i.e. .689
d = 3.4E2 #mantissa exponent number
print(d) #gives value of d i.e. 340
print(type(d)) # gives type of object i.e. hexadecimal object
e = 9.62e-2 
print(e) #gives value of e i.e. 0.0962
print(9.8.2) 


# complex object demo program
a = 3 + 4j
print(a) #gives value of a i.e. 3+4j
print(type(a)) #gives type of object i.e. complex object
print(id(a)) #gives address of object a 
print(a . real) #gives value of a i.e. 3
print(a . imag) #gives value of a i.e. 4
print(type(a . real)) #gives type of object a i.e. int
print(type(a . imag)) #gives type of object a i.e. int





a = 6j
print(a)           # (0+6j)
print(type(a))     # <class 'complex'>
print(a.real)      # 0.0
print(a.imag)      # 6.0
print(5 + j6)      # Name Error (because `j6` is not valid syntax)
print(3 + 4i)      # Name Error (Python uses `j`, not `i`)
print(4 + j)       # Name Error (`j` not defined by itself)
print(4 + 1j)      # (4+1j)
print(4 + 0j)      # (4+0j)



a = True
print(a)               # True — prints the Boolean value
print(type(a))         # <class 'bool'> — `a` is a bool
print(id(a))           # <int> — unique memory address of the `True` singleton

b = False
print(b)               # False — prints the Boolean value
print(type(b))         # <class 'bool'> — `b` is a bool

print(True + True)     # 2 — True is 1, so 1 + 1 = 2 
print(True + False)    # 1 — 1 + 0 = 1 
print(False + True)    # 1 — 0 + 1 = 1 print(False + False)   # 0 — 0 + 0 = 0 
print(True + True + True)   # 3 — 1 + 1 + 1 = 3 

print(25 + 10.8 + True)     # 36.8 — True is 1: 25 + 10.8 + 1 = 36.8

print(True > False)    # True — compares numeric values: 1 > 0

print(True)            # True — prints the Boolean
print(False)           # False — prints the Boolean

print(true)            # Name Error — `true` is undefined (Python is case‑sensitive)
print(false)           # Name Error — `false` is undefined (must be capitalized)




print(a)               # 3247 
pa = 0O6247
rint(type(a))         # <class 'int'> 
print(id(a))           # <int> 

b = 0o6247
print(id(b))           # <int> 
print(b)               # 3247 

c = 3239
print(c)               # 3239 
print(id(c))           # <int> 

print(0o9248)          # Syntax Error  digits 8 and 9 not allowed


a = 0XA7B9
print(a)             # 42937 — hex A7B9 equals decimal 42937
print(type(a))       # <class 'int'> — hex literal is an integer

b = 0xBEEF
print(b)             # 48879 — hex BEEF equals decimal 48879

print(A7B9)          # Name Error — A7B9 is not a defined variable

print('A7B9')        # A7B9 — prints the string as-is

print(0XBEER)        # Syntax Error — ‘R’ is not a valid hex digit (only 0–9, A–F) 

print(0XHYD)         # Syntax Error — ‘H’, ‘Y’, ‘D’ are invalid hex digits 

print(0xA7G9B)       # Syntax Error — ‘G’ is not a valid hex digit 


a = 9248
print(a)            # 9248 — prints the integer value assigned to `a`
print(type(a))      # <class 'int'> — confirms that `a` is of type `int`, Python’s integer type

